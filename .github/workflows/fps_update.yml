name: Update FPS Shops Data

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:

jobs:
  update_fps_shops:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Cache pip dependencies
      id: cache-pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      if: steps.cache-pip.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install aiohttp pandas
      env:
        CACHE_DIR: ~/.cache/pip

    - name: Download previous release artifact
      id: download-previous
      run: |
        latest_release=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest)
        asset_url=$(echo $latest_release | jq -r '.assets[0].browser_download_url')
        if [ "$asset_url" != "null" ]; then
          curl -L -o previous_ConsolidatedShops.csv $asset_url
          echo "Previous artifact downloaded."
        else
          echo "No previous release found."
        fi

    - name: Run FPS data extraction and combination script
      run: python script.py

    - name: Compare new data with previous data
      id: compare-data
      run: |
        if [ -f "previous_ConsolidatedShops.csv" ]; then
          echo "Previous data exists. Comparing..."
          python compare_data.py
        else
          echo "No previous data found. Skipping comparison."
          echo "changes=N/A" >> $GITHUB_ENV
          echo "no_changes=true" >> $GITHUB_ENV
        fi

    - name: Check for changes
      id: check-changes
      run: |
        if [ "${{ env.changes }}" == "N/A" ]; then
          echo "no_changes=true" >> $GITHUB_ENV
        elif echo "${{ env.changes }}" | grep -q "Added Shops: 0" && \
             echo "${{ env.changes }}" | grep -q "Removed Shops: 0" && \
             echo "${{ env.changes }}" | grep -q "Updated Shops: 0"; then
          echo "no_changes=true" >> $GITHUB_ENV
        else
          echo "no_changes=false" >> $GITHUB_ENV
        fi
      env:
        changes: ${{ steps.compare-data.outputs.changes }}

    - name: Upload ConsolidatedShops.csv artifact
      if: env.no_changes == 'false'
      uses: actions/upload-artifact@v2
      with:
        name: ConsolidatedShops.csv
        path: ConsolidatedShops.csv

    - name: Create release with notes
      if: env.no_changes == 'false'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "fps-shops-$(date +'%Y%m%d%H%M%S')"
        release_name: "FPS Shops Update - $(date +'%Y-%m-%d %H:%M:%S')"
        body: |
          Daily update of FPS Shops data.

          Changes:
          ${{ steps.compare-data.outputs.changes }}
        draft: false
        prerelease: false
